name: 'Release Packages'

on:
    push:
        paths:
            - '.changeset/**'
            - 'packages/**'
        branches:
            - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout branch
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: package.json
                  registry-url: 'https://registry.npmjs.org/'
                  always-auth: true

            - uses: pnpm/action-setup@v4

            - name: Install Dependencies
              run: |
                  pnpm install --frozen-lockfile

            - name: Create .npmrc file
              run: |
                  cat << EOF > "$HOME/.npmrc"
                    //registry.npmjs.org/:_authToken=${NPM_TOKEN}
                  EOF
              env:
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Setup Git User
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"

            - name: Create Release Pull Request or Publish to npm
              id: changesets
              uses: changesets/action@v1
              with:
                  publish: pnpm run release
                  commit: 'ci(changesets): version packages'
                  setupGitUser: false
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
                  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Update releases documentation
              if: steps.changesets.outputs.published == 'false'
              run: node scripts/update-releases.mjs

            - name: Format releases documentation
              if: steps.changesets.outputs.published == 'false'
              run: pnpm prettier --write apps/website/content/docs/getting-started/releases.md

            - name: Commit updated releases documentation
              if: steps.changesets.outputs.published == 'false'
              run: |
                  if [[ -n $(git status --porcelain) ]]; then
                      git add apps/website/content/docs/getting-started/releases.md
                      git commit -m "docs: update releases.md with latest changelogs"
                      git push
                  fi
