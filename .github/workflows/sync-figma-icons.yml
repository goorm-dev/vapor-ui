name: '[CI] Sync Figma Icons'

on:
    pull_request:
        branches: [main]

    workflow_dispatch:
        inputs:
            icon_types:
                description: 'Icon types to sync (comma-separated)'
                required: true
                default: 'basic,symbol'
                type: string
    schedule:
        # Run every Thursday at 4 PM KST (07:00 UTC)
        - cron: '0 7 * * 4'

jobs:
    sync-figma-icons:
        runs-on: ubuntu-latest
        if: github.repository == 'goorm-dev/vapor-ui'
        steps:
            - name: Install
              uses: ./.github/composite/install
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Parse icon types to sync
              id: parse_types
              run: |
                  REQUESTED_TYPES="${{ github.event.inputs.icon_types || 'basic,symbol' }}"
                  echo "types=$REQUESTED_TYPES" >> $GITHUB_OUTPUT
                  echo "üîç Icon types to sync: $REQUESTED_TYPES"

            - name: Sync Basic Icons from Figma
              if: contains(steps.parse_types.outputs.types, 'basic')
              env:
                  FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
                  TYPE: basic
              run: |
                  echo "üöÄ Syncing basic icons from Figma..."
                  TYPE=basic node ./scripts/syncFigmaIcons.js

            - name: Sync Symbol Icons from Figma
              if: contains(steps.parse_types.outputs.types, 'symbol')
              env:
                  FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
                  TYPE: symbol
              run: |
                  echo "üöÄ Syncing symbol icons from Figma..."
                  TYPE=symbol node ./scripts/syncFigmaIcons.js

            - name: Format generated files
              run: |
                  pnpm format

            - name: Check for changes
              id: check_changes
              run: |
                  if [[ -n $(git status --porcelain) ]]; then
                    echo "has_changes=true" >> $GITHUB_OUTPUT
                    echo "üìù Changes detected in icons"
                    
                    # Count changed files
                    changed_count=$(git status --porcelain | wc -l)
                    echo "changed_files=$changed_count" >> $GITHUB_OUTPUT
                    
                    # Get list of changed icon files
                    changed_icons=$(git status --porcelain | grep -E '\.(tsx?|js)$' | grep -E '(basic|symbol)-icons' | sed 's/^...//g' | sed 's|.*/||' | sed 's/\.[^.]*$//' | sort | uniq)
                    
                    # Format as markdown list
                    if [[ -n "$changed_icons" ]]; then
                      icon_list=""
                      while IFS= read -r icon; do
                        if [[ -n "$icon" ]]; then
                          icon_list="${icon_list}- \`${icon}\`"$'\n'
                        fi
                      done <<< "$changed_icons"
                      
                      # Remove trailing newline and save to multiline output
                      {
                        echo 'changed_icons<<EOF'
                        echo -n "$icon_list"
                        echo 'EOF'
                      } >> $GITHUB_OUTPUT
                    else
                      echo 'changed_icons=' >> $GITHUB_OUTPUT
                    fi
                  else
                    echo "has_changes=false" >> $GITHUB_OUTPUT
                    echo "‚úÖ No changes detected in icons"
                    echo 'changed_icons=' >> $GITHUB_OUTPUT
                  fi

            - name: Create branch and commit changes
              if: steps.check_changes.outputs.has_changes == 'true'
              run: |
                  BRANCH_NAME="sync-figma-icons-$(date +%Y%m%d-%H%M%S)"
                  echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git checkout -b $BRANCH_NAME origin/main
                  
                  # Create changeset with details about updated icons
                  CHANGESET_FILE=".changeset/sync-icons-$(date +%Y%m%d%H%M%S).md"
                  
                  # Create changeset content
                  echo "---" > "$CHANGESET_FILE"
                  echo "\"@goorm-dev/vapor-icons\": minor" >> "$CHANGESET_FILE"
                  echo "---" >> "$CHANGESET_FILE"
                  echo "" >> "$CHANGESET_FILE"
                  echo "Sync icons from Figma" >> "$CHANGESET_FILE"
                  echo "" >> "$CHANGESET_FILE"
                  echo "**New/Updated Icons:**" >> "$CHANGESET_FILE"
                  echo "${{ steps.check_changes.outputs.changed_icons }}" >> "$CHANGESET_FILE"
                  echo "" >> "$CHANGESET_FILE"
                  echo "- Synced ${{ steps.parse_types.outputs.types }} icon types from Figma" >> "$CHANGESET_FILE"
                  echo "- Updated icon components and stories" >> "$CHANGESET_FILE"
                  echo "- Applied consistent formatting and code generation" >> "$CHANGESET_FILE"
                  
                  # Add all changes including the changeset
                  git add packages/icons/src/components/ stories/foundation/icons/ .changeset/
                  git commit -m "feat: sync icons from Figma

                  ü§ñ Generated with [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

                  Co-Authored-By: GitHub Action <action@github.com>"
                  git push -u origin $BRANCH_NAME

            - name: Create Pull Request
              if: steps.check_changes.outputs.has_changes == 'true'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Prepare PR body with icon list
                  PR_BODY="ü§ñ Automated sync of icons from Figma

                  **Icon Types:** ${{ steps.parse_types.outputs.types }}
                  **Files Modified:** ${{ steps.check_changes.outputs.changed_files }}

                  **Changed Icons:**
                  ${{ steps.check_changes.outputs.changed_icons }}

                  **Changes:**
                  - Updated icons from Figma
                  - Generated components and stories
                  - Formatted generated files
                  - Created changeset for version bump

                  **Workflow:** [View run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

                  ü§ñ Generated with [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"
                  
                  gh pr create \
                    --title "feat: sync icons from Figma" \
                    --body "$PR_BODY" \
                    --base main \
                    --head ${{ env.branch_name }}

    notify-slack-on-completion:
        runs-on: ubuntu-latest
        needs: sync-figma-icons
        if: always() && github.repository == 'goorm-dev/vapor-ui'
        steps:
            - name: Send Slack notification
              run: |
                  if [[ "${{ needs.sync-figma-icons.result }}" == "success" ]]; then
                    COLOR="#36c936"
                    EMOJI=":white_check_mark:"
                    MESSAGE="Figma ÏïÑÏù¥ÏΩò ÎèôÍ∏∞ÌôîÍ∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§"
                  else
                    COLOR="#ff5c5c" 
                    EMOJI=":x:"
                    MESSAGE="Figma ÏïÑÏù¥ÏΩò ÎèôÍ∏∞ÌôîÍ∞Ä Ïã§Ìå®ÌñàÏäµÎãàÎã§"
                  fi

                  curl -X POST \
                  -H 'Content-type: application/json' \
                  --data "{
                    \"username\": \"GDS-bot\",
                    \"attachments\": [{
                      \"pretext\": \"*@vapor-alarm* $MESSAGE $EMOJI\",
                      \"color\": \"$COLOR\",
                      \"fields\": [{
                        \"title\": \"Repository\",
                        \"value\": \"<${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>\",
                        \"short\": false
                      }, {
                        \"title\": \"Branch\",
                        \"value\": \"${{ github.ref_name }}\",
                        \"short\": true
                      }, {
                        \"title\": \"Workflow\",
                        \"value\": \"<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Sync Figma Icons>\",
                        \"short\": true
                      }, {
                        \"title\": \"Triggered by\",
                        \"value\": \"${{ github.event_name == 'schedule' && 'Scheduled' || github.actor }}\",
                        \"short\": true
                      }]
                    }]
                  }" "${{ secrets.SLACK_WEB_HOOK_ALARM }}"