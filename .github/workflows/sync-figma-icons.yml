name: '[CI] Sync Figma Icons'

on:
    pull_request:
        branches: [main]

    workflow_dispatch:
        inputs:
            icon_types:
                description: 'Icon types to sync (comma-separated)'
                required: true
                default: 'basic,symbol'
                type: string
    schedule:
        # Run every Thursday at 4 PM KST (07:00 UTC)
        - cron: '0 7 * * 4'

jobs:
    sync-figma-icons:
        runs-on: ubuntu-latest
        if: github.repository == 'goorm-dev/vapor-ui'
        steps:
            - name: Checkout branch
              uses: actions/checkout@v4

            - name: Install
              uses: ./.github/composite/install

            - name: Parse icon types to sync
              id: parse_types
              run: |
                  REQUESTED_TYPES="${{ github.event.inputs.icon_types || 'basic,symbol' }}"
                  echo "types=$REQUESTED_TYPES" >> $GITHUB_OUTPUT
                  echo "🔍 Icon types to sync: $REQUESTED_TYPES"

            - name: Sync Basic Icons from Figma
              if: contains(steps.parse_types.outputs.types, 'basic')
              env:
                  FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
                  TYPE: basic
              run: |
                  echo "🚀 Syncing basic icons from Figma..."
                  TYPE=basic node ./scripts/syncFigmaIcons.js

            - name: Sync Symbol Icons from Figma
              if: contains(steps.parse_types.outputs.types, 'symbol')
              env:
                  FIGMA_TOKEN: ${{ secrets.FIGMA_TOKEN }}
                  TYPE: symbol
              run: |
                  echo "🚀 Syncing symbol icons from Figma..."
                  TYPE=symbol node ./scripts/syncFigmaIcons.js

            - name: Format generated files
              run: |
                  pnpm format

            - name: Check for changes
              id: check_changes
              run: |
                  if [[ -n $(git status --porcelain) ]]; then
                    echo "has_changes=true" >> $GITHUB_OUTPUT
                    echo "📝 Changes detected in icons"
                    
                    # Count changed files
                    changed_count=$(git status --porcelain | wc -l)
                    echo "changed_files=$changed_count" >> $GITHUB_OUTPUT
                    
                    # Get list of changed icon files
                    changed_icons=$(git status --porcelain | grep -E '\.(tsx?|js)$' | grep -E '(basic|symbol)-icons' | sed 's/^...//g' | sed 's|.*/||' | sed 's/\.[^.]*$//' | sort | uniq)
                    
                    # Format as markdown list
                    if [[ -n "$changed_icons" ]]; then
                      # Save to multiline output with proper escaping
                      {
                        echo 'changed_icons<<EOF'
                        while IFS= read -r icon; do
                          if [[ -n "$icon" ]]; then
                            printf -- "- \`%s\`\n" "$icon"
                          fi
                        done <<< "$changed_icons"
                        echo 'EOF'
                      } >> $GITHUB_OUTPUT
                    else
                      echo 'changed_icons=' >> $GITHUB_OUTPUT
                    fi
                  else
                    echo "has_changes=false" >> $GITHUB_OUTPUT
                    echo "✅ No changes detected in icons"
                    echo 'changed_icons=' >> $GITHUB_OUTPUT
                  fi

            - name: Create branch and commit changes
              if: steps.check_changes.outputs.has_changes == 'true'
              run: |
                  BRANCH_NAME="sync-figma-icons-$(date +%Y%m%d-%H%M%S)"
                  echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"

                  # Ensure we have the latest main branch
                  git fetch origin main
                  git checkout main
                  git pull origin main

                  # Create new branch from main
                  git checkout -b $BRANCH_NAME

                  # Create changeset with details about updated icons
                  CHANGESET_FILE=".changeset/sync-icons-$(date +%Y%m%d%H%M%S).md"

                  # Create changeset content
                  echo "---" > "$CHANGESET_FILE"
                  echo "\"@vapor-ui/icons\": minor" >> "$CHANGESET_FILE"
                  echo "---" >> "$CHANGESET_FILE"
                  echo "" >> "$CHANGESET_FILE"
                  echo "Sync icons from Figma" >> "$CHANGESET_FILE"
                  echo "" >> "$CHANGESET_FILE"
                  echo "**New/Updated Icons:**" >> "$CHANGESET_FILE"
                  echo "${{ steps.check_changes.outputs.changed_icons }}" >> "$CHANGESET_FILE"
                  echo "" >> "$CHANGESET_FILE"
                  echo "- Synced ${{ steps.parse_types.outputs.types }} icon types from Figma" >> "$CHANGESET_FILE"
                  echo "- Updated icon components and stories" >> "$CHANGESET_FILE"
                  echo "- Applied consistent formatting and code generation" >> "$CHANGESET_FILE"

                  # Add all changes including the changeset
                  git add packages/icons/src/components/ .changeset/
                  git commit -m "feat: sync icons from Figma

                  🤖 Generated with [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

                  Co-Authored-By: GitHub Action <action@github.com>"
                  git push -u origin $BRANCH_NAME

            - name: Create Pull Request
              if: steps.check_changes.outputs.has_changes == 'true'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  # Prepare PR body with icon list
                  PR_BODY="🤖 Automated sync of icons from Figma

                  **Icon Types:** ${{ steps.parse_types.outputs.types }}
                  **Files Modified:** ${{ steps.check_changes.outputs.changed_files }}

                  **Changed Icons:**
                  ${{ steps.check_changes.outputs.changed_icons }}

                  **Changes:**
                  - Updated icons from Figma
                  - Generated components and stories
                  - Formatted generated files
                  - Created changeset for version bump

                  **Workflow:** [View run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

                  🤖 Generated with [GitHub Actions](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})"

                  gh pr create \
                    --title "feat: sync icons from Figma" \
                    --body "$PR_BODY" \
                    --base main \
                    --head ${{ env.branch_name }}
