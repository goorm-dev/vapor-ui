{
    "name": "CheckboxRoot",
    "displayName": "Checkbox.Root",
    "description": "다중 선택이 가능한 체크박스 입력 컨트롤입니다.\n\n`<button>` 요소와 그 옆에 숨겨진 `<input>`을 렌더링합니다.\n\n{@see https://vapor-ui.goorm.io/docs/components/checkbox Checkbox Documentation}",
    "props": [
        {
            "name": "className",
            "type": ["string", "(((state: State) => string) & string)"],
            "required": false,
            "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state.\n요소에 적용된 CSS 클래스 또는 컴포넌트의 상태에 따라 클래스를 반환하는 함수."
        },
        {
            "name": "id",
            "type": ["string"],
            "required": false,
            "description": "The id of the input element."
        },
        {
            "name": "name",
            "type": ["string"],
            "required": false,
            "description": "Identifies the field when a form is submitted.",
            "defaultValue": "undefined"
        },
        {
            "name": "defaultChecked",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the checkbox is initially ticked.\n\nTo render a controlled checkbox, use the `checked` prop instead.",
            "defaultValue": "false"
        },
        {
            "name": "disabled",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the component should ignore user interaction.",
            "defaultValue": "false"
        },
        {
            "name": "value",
            "type": ["string"],
            "required": false,
            "description": "The value of the selected checkbox."
        },
        {
            "name": "checked",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the checkbox is currently ticked.\n\nTo render an uncontrolled checkbox, use the `defaultChecked` prop instead.",
            "defaultValue": "undefined"
        },
        {
            "name": "readOnly",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the user should be unable to tick or untick the checkbox.",
            "defaultValue": "false"
        },
        {
            "name": "required",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the user must tick the checkbox before submitting a form.",
            "defaultValue": "false"
        },
        {
            "name": "size",
            "type": ["md", "lg"],
            "required": false,
            "description": "체크박스의 크기를 결정합니다.",
            "defaultValue": "md"
        },
        {
            "name": "render",
            "type": [
                "(((ReactElement<Record<string, unknown>, string",
                "JSXElementConstructor<any>>",
                "ComponentRenderFn<HTMLProps<any>, State>) & (ReactElement<...>",
                "ComponentRenderFn<...>)) & ReactElement<...>)"
            ],
            "required": false,
            "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.\n구성 요소의 HTML 요소를 다른 태그로 교체하거나 다른 구성 요소와 조합할 수 있게 합니다.\n\n\n렌더링할 요소를 반환하는 `ReactElement` 또는 함수를 받아들입니다."
        },
        {
            "name": "onCheckedChange",
            "type": ["((checked: boolean, event: Event) => void)"],
            "required": false,
            "description": "Event handler called when the checkbox is ticked or unticked."
        },
        {
            "name": "indeterminate",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the checkbox is in a mixed state: neither ticked, nor unticked.",
            "defaultValue": "false"
        },
        {
            "name": "inputRef",
            "type": ["Ref<HTMLInputElement>"],
            "required": false,
            "description": "A ref to access the hidden `<input>` element."
        },
        {
            "name": "parent",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the checkbox controls a group of child checkboxes.\n\nMust be used in a [Checkbox Group](https://base-ui.com/react/components/checkbox-group).",
            "defaultValue": "false"
        },
        {
            "name": "nativeButton",
            "type": ["boolean"],
            "required": false,
            "description": "Whether the component renders a native `<button>` element when replacing it\nvia the `render` prop.\nSet to `false` if the rendered element is not a button (e.g. `<div>`).",
            "defaultValue": "true"
        },
        {
            "name": "invalid",
            "type": ["boolean"],
            "required": false,
            "description": "유효성 검증 실패 상태를 결정합니다."
        }
    ],
    "generatedAt": "2025-09-29T06:06:06.806Z",
    "sourceFile": "../../packages/core/src/components/checkbox/checkbox.tsx"
}
