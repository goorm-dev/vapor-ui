{
    "name": "TextInput",
    "displayName": "TextInput",
    "description": "Renders a text input field with various input types support. Renders an <input> element.",
    "props": [
        {
            "name": "className",
            "type": ["string", "(state: State) => string"],
            "required": false,
            "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
        },
        {
            "name": "type",
            "type": ["search", "text", "email", "password", "url", "tel"],
            "required": false
        },
        {
            "name": "defaultValue",
            "type": ["string"],
            "required": false
        },
        {
            "name": "value",
            "type": ["string"],
            "required": false
        },
        {
            "name": "size",
            "type": ["sm", "md", "lg", "xl"],
            "required": false,
            "description": "Use the size prop to change the size of the text input",
            "defaultValue": "md"
        },
        {
            "name": "render",
            "type": [
                "ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>>",
                "ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>> & ComponentRenderFn<HTMLProps, {}>",
                "ComponentRenderFn<HTMLProps<any>, State> & ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>>",
                "ComponentRenderFn<HTMLProps<any>, State> & ComponentRenderFn<HTMLProps, {}>"
            ],
            "required": false,
            "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
        },
        {
            "name": "onValueChange",
            "type": ["(value: string, event: Event) => void"],
            "required": false
        },
        {
            "name": "invalid",
            "type": ["false", "true"],
            "required": false,
            "description": "Use the invalid prop to indicate validation errors",
            "defaultValue": "false"
        }
    ],
    "generatedAt": "2025-10-02T01:36:27.674Z",
    "sourceFile": "/Users/goorm/design-system/gds/vapor-ui/packages/core/src/components/text-input/text-input.tsx"
}
