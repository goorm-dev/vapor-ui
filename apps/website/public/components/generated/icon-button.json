{
    "name": "IconButton",
    "displayName": "IconButton",
    "props": [
        {
            "name": "size",
            "type": ["sm", "md", "lg", "xl"],
            "required": false,
            "description": "버튼의 크기를 결정합니다.",
            "defaultValue": "md"
        },
        {
            "name": "color",
            "type": ["primary", "secondary", "success", "warning", "danger", "contrast"],
            "required": false,
            "description": "버튼의 색상을 결정합니다."
        },
        {
            "name": "shape",
            "type": ["circle", "square"],
            "required": false
        },
        {
            "name": "className",
            "type": ["string"],
            "required": false,
            "description": "요소에 적용된 CSS 클래스 또는 컴포넌트의 상태에 따라 클래스를 반환하는 함수."
        },
        {
            "name": "aria-label",
            "type": "string",
            "required": true,
            "description": "Defines a string value that labels the current element."
        },
        {
            "name": "render",
            "type": [
                "ReactElement<Record<string, unknown>, string",
                "JSXElementConstructor<any>>",
                "(ComponentRenderFn<HTMLProps, {}> & ReactElement<...>)",
                "(ReactElement<...> & ComponentRenderFn<...>)"
            ],
            "required": false,
            "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render.\n구성 요소의 HTML 요소를 다른 태그로 교체하거나 다른 구성 요소와 조합할 수 있게 합니다.\n\n\n렌더링할 요소를 반환하는 `ReactElement` 또는 함수를 받아들입니다."
        },
        {
            "name": "variant",
            "type": ["outline", "fill", "ghost"],
            "required": false,
            "description": "버튼의 스타일 변형을 결정합니다."
        }
    ],
    "generatedAt": "2025-09-30T00:07:06.209Z",
    "sourceFile": "../../packages/core/src/components/icon-button/icon-button.tsx"
}
