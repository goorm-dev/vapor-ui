{
    "name": "MenuSubmenuRoot",
    "displayName": "Menu.SubmenuRoot",
    "description": "Provides the root context for a nested submenu within a menu. Renders a <div> element.",
    "props": [
        {
            "name": "orientation",
            "type": ["horizontal", "vertical"],
            "required": false,
            "description": "The visual orientation of the menu.\nControls whether roving focus uses up/down or left/right arrow keys.",
            "defaultValue": "'vertical'"
        },
        {
            "name": "children",
            "type": [
                "undefined",
                "null",
                "string",
                "number",
                "false",
                "true",
                "ReactElement",
                "Iterable<ReactNode>",
                "ReactPortal"
            ],
            "required": true
        },
        {
            "name": "loop",
            "type": ["false", "true"],
            "required": false,
            "description": "Whether to loop keyboard focus back to the first item\nwhen the end of the list is reached while using the arrow keys.",
            "defaultValue": "true"
        },
        {
            "name": "disabled",
            "type": ["false", "true"],
            "required": false,
            "description": "Whether the component should ignore user interaction.",
            "defaultValue": "false"
        },
        {
            "name": "open",
            "type": ["false", "true"],
            "required": false,
            "description": "Whether the menu is currently open."
        },
        {
            "name": "delay",
            "type": ["number"],
            "required": false,
            "description": "How long to wait before the menu may be opened on hover. Specified in milliseconds.\n\nRequires the `openOnHover` prop.",
            "defaultValue": "100"
        },
        {
            "name": "defaultOpen",
            "type": ["false", "true"],
            "required": false,
            "description": "Whether the menu is initially open.\n\nTo render a controlled menu, use the `open` prop instead.",
            "defaultValue": "false"
        },
        {
            "name": "onOpenChange",
            "type": [
                "(open: boolean, event: Event | undefined, reason: OpenChangeReason | undefined) => void"
            ],
            "required": false,
            "description": "Event handler called when the menu is opened or closed."
        },
        {
            "name": "onOpenChangeComplete",
            "type": ["(open: boolean) => void"],
            "required": false,
            "description": "Event handler called after any animations complete when the menu is closed."
        },
        {
            "name": "actionsRef",
            "type": ["RefObject<Actions>"],
            "required": false,
            "description": "A ref to imperative actions.\n- `unmount`: When specified, the menu will not be unmounted when closed.\nInstead, the `unmount` function must be called to unmount the menu manually.\nUseful when the menu's animation is controlled by an external library."
        },
        {
            "name": "closeParentOnEsc",
            "type": ["false", "true"],
            "required": false,
            "description": "When in a submenu, determines whether pressing the Escape key\ncloses the entire menu, or only the current child menu.",
            "defaultValue": "true"
        },
        {
            "name": "closeDelay",
            "type": ["number"],
            "required": false,
            "description": "How long to wait before closing the menu that was opened on hover.\nSpecified in milliseconds.\n\nRequires the `openOnHover` prop.",
            "defaultValue": "0"
        }
    ],
    "generatedAt": "2025-10-13T00:43:17.230Z",
    "sourceFile": "/Users/goorm/design-system/gds/vapor-ui/packages/core/src/components/menu/menu.tsx"
}
