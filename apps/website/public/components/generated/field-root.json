{
    "name": "FieldRoot",
    "displayName": "Field.Root",
    "description": "Provides a container for form elements with label, description, and validation messages. Renders a <div> element.\n\nDocumentation: [Field Documentation](https://vapor-ui.goorm.io/docs/components/field)",
    "props": [
        {
            "name": "className",
            "type": ["string", "(state: State) => string"],
            "required": false,
            "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
        },
        {
            "name": "name",
            "type": ["string"],
            "required": false,
            "description": "Identifies the field when a form is submitted.\nTakes precedence over the `name` prop on the `<Field.Control>` component."
        },
        {
            "name": "disabled",
            "type": ["false", "true"],
            "required": false,
            "description": "Whether the component should ignore user interaction.\nTakes precedence over the `disabled` prop on the `<Field.Control>` component.",
            "defaultValue": "false"
        },
        {
            "name": "render",
            "type": [
                "ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>>",
                "ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>> & ComponentRenderFn<HTMLProps, {}>",
                "ComponentRenderFn<HTMLProps<any>, State> & ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>>",
                "ComponentRenderFn<HTMLProps<any>, State> & ComponentRenderFn<HTMLProps, {}>"
            ],
            "required": false,
            "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
        },
        {
            "name": "validate",
            "type": [
                "(value: unknown, formValues: Record<string, unknown>) => string | string[] | Promise<string | string[] | null> | null"
            ],
            "required": false,
            "description": "A function for custom validation. Return a string or an array of strings with\nthe error message(s) if the value is invalid, or `null` if the value is valid."
        },
        {
            "name": "validationMode",
            "type": ["onBlur", "onChange"],
            "required": false,
            "description": "Determines when the field should be validated.\n\n- **onBlur** triggers validation when the control loses focus\n- **onChange** triggers validation on every change to the control value",
            "defaultValue": "'onBlur'"
        },
        {
            "name": "validationDebounceTime",
            "type": ["number"],
            "required": false,
            "description": "How long to wait between `validate` callbacks if\n`validationMode=\"onChange\"` is used. Specified in milliseconds.",
            "defaultValue": "0"
        },
        {
            "name": "invalid",
            "type": ["false", "true"],
            "required": false,
            "description": "Whether the field is forcefully marked as invalid."
        }
    ],
    "generatedAt": "2025-10-01T07:13:25.409Z",
    "sourceFile": "/Users/goorm/design-system/gds/vapor-ui/packages/core/src/components/field/field.tsx"
}
