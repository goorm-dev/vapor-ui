{
    "name": "DialogContent",
    "displayName": "Dialog.Content",
    "description": "Combines Portal, Overlay, and Popup into a convenient wrapper component. Renders a <div> element.",
    "props": [
        {
            "name": "className",
            "type": ["string", "(state: State) => string"],
            "required": false,
            "description": "CSS class applied to the element, or a function that\nreturns a class based on the component’s state."
        },
        {
            "name": "render",
            "type": [
                "ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>>",
                "ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>> & ComponentRenderFn<HTMLProps, {}>",
                "ComponentRenderFn<HTMLProps<any>, State> & ReactElement<Record<string, unknown>, string | JSXElementConstructor<any>>",
                "ComponentRenderFn<HTMLProps<any>, State> & ComponentRenderFn<HTMLProps, {}>"
            ],
            "required": false,
            "description": "Allows you to replace the component’s HTML element\nwith a different tag, or compose it with another component.\n\nAccepts a `ReactElement` or a function that returns the element to render."
        },
        {
            "name": "initialFocus",
            "type": [
                "RefObject<HTMLElement | null>",
                "(interactionType: InteractionType) => RefObject<HTMLElement | null>"
            ],
            "required": false,
            "description": "Determines the element to focus when the dialog is opened.\nBy default, the first focusable element is focused."
        },
        {
            "name": "finalFocus",
            "type": ["RefObject<HTMLElement | null>"],
            "required": false,
            "description": "Determines the element to focus when the dialog is closed.\nBy default, focus returns to the trigger."
        },
        {
            "name": "portalProps",
            "type": ["DialogPortalProps"],
            "required": false
        },
        {
            "name": "overlayProps",
            "type": ["DialogOverlayProps"],
            "required": false
        }
    ],
    "generatedAt": "2025-10-01T07:02:02.756Z",
    "sourceFile": "/Users/goorm/design-system/gds/vapor-ui/packages/core/src/components/dialog/dialog.tsx"
}
