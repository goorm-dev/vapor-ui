{
    "rootProps": [
        {
            "prop": "open",
            "type": ["boolean"],
            "default": "null",
            "description": "Sheet의 열림 상태를 제어합니다. 제어된 상태에서 사용됩니다."
        },
        {
            "prop": "defaultOpen",
            "type": ["boolean"],
            "default": "false",
            "description": "Sheet의 초기 열림 상태입니다. 제어되지 않은 상태에서 사용됩니다."
        },
        {
            "prop": "onOpenChange",
            "type": ["(open: boolean) => void"],
            "default": "null",
            "description": "Sheet의 열림 상태가 변경될 때 호출되는 콜백 함수입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "Sheet 내부에 렌더링할 자식 요소들입니다."
        }
    ],
    "triggerProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "button",
            "description": "트리거 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "트리거 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "트리거 버튼 내부에 표시할 내용입니다."
        }
    ],
    "contentProps": [
        {
            "prop": "portalProps",
            "type": ["SheetPortalProps"],
            "default": "{}",
            "description": "Portal 컴포넌트에 전달할 props입니다. keepMounted 옵션을 포함할 수 있습니다."
        },
        {
            "prop": "overlayProps",
            "type": ["SheetOverlayProps"],
            "default": "{}",
            "description": "Overlay 컴포넌트에 전달할 props입니다."
        },
        {
            "prop": "positionerProps",
            "type": ["SheetPositionerProps"],
            "default": "{}",
            "description": "Positioner 컴포넌트에 전달할 props입니다. side 옵션을 포함할 수 있습니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "Sheet 콘텐츠 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "Sheet 내부에 렌더링할 콘텐츠입니다."
        }
    ],
    "portalProps": [
        {
            "prop": "keepMounted",
            "type": ["boolean"],
            "default": "false",
            "description": "Sheet이 닫혀도 DOM에서 제거되지 않고 유지되도록 설정합니다."
        },
        {
            "prop": "container",
            "type": ["HTMLElement", "() => HTMLElement"],
            "default": "document.body",
            "description": "Portal이 렌더링될 컨테이너 요소를 지정합니다."
        }
    ],
    "overlayProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "오버레이 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "오버레이 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "popupProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "팝업 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "팝업 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "팝업 내부에 렌더링할 콘텐츠입니다."
        }
    ],
    "positionerProps": [
        {
            "prop": "side",
            "type": ["\"top\"", "\"right\"", "\"bottom\"", "\"left\""],
            "default": "\"right\"",
            "description": "Sheet가 나타날 화면의 위치를 설정합니다."
        },
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "포지셔너 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "포지셔너 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "headerProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "헤더 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "헤더 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "헤더 내부에 렌더링할 내용입니다. 일반적으로 Title과 Close 버튼을 포함합니다."
        }
    ],
    "bodyProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "본문 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "본문 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "본문 내부에 렌더링할 주요 콘텐츠입니다."
        }
    ],
    "footerProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "푸터 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "푸터 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "푸터 내부에 렌더링할 내용입니다. 일반적으로 액션 버튼들을 포함합니다."
        }
    ],
    "titleProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "h2",
            "description": "제목 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "제목 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "Sheet의 제목 텍스트입니다."
        }
    ],
    "descriptionProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "p",
            "description": "설명 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "설명 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "Sheet의 설명 텍스트입니다."
        }
    ],
    "closeProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "button",
            "description": "닫기 버튼 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "닫기 버튼 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "닫기 버튼 내부에 표시할 내용입니다."
        }
    ]
}
