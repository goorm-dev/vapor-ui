{
    "rootProps": [
        {
            "prop": "items",
            "type": ["Array<{label: string, value: string}>", "Record<string, string>"],
            "default": "null",
            "description": "Select의 옵션 아이템들을 정의합니다. 배열 형태(label, value 속성을 가진 객체) 또는 객체 형태(키-값 쌍)로 제공할 수 있습니다."
        },
        {
            "prop": "placeholder",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "값이 선택되지 않았을 때 표시할 플레이스홀더 텍스트입니다."
        },
        {
            "prop": "size",
            "type": ["'sm'", "'md'", "'lg'", "'xl'"],
            "default": "'md'",
            "description": "Select의 크기를 설정합니다."
        },
        {
            "prop": "invalid",
            "type": ["boolean"],
            "default": "false",
            "description": "Select가 유효하지 않은 상태임을 나타냅니다. true일 때 오류 스타일이 적용됩니다."
        },
        {
            "prop": "value",
            "type": ["unknown"],
            "default": "null",
            "description": "Select의 현재 선택된 값입니다. 제어 컴포넌트로 사용할 때 필요합니다."
        },
        {
            "prop": "defaultValue",
            "type": ["unknown"],
            "default": "null",
            "description": "Select의 초기 선택 값입니다. 비제어 컴포넌트로 사용할 때 설정합니다."
        },
        {
            "prop": "onValueChange",
            "type": ["(value: unknown, event?: Event) => void"],
            "default": "null",
            "description": "값이 변경될 때 호출되는 콜백 함수입니다."
        },
        {
            "prop": "disabled",
            "type": ["boolean"],
            "default": "false",
            "description": "Select를 비활성화 상태로 만듭니다."
        },
        {
            "prop": "readOnly",
            "type": ["boolean"],
            "default": "false",
            "description": "Select를 읽기 전용 상태로 만듭니다. 값을 변경할 수 없지만 포커스는 가능합니다."
        },
        {
            "prop": "open",
            "type": ["boolean"],
            "default": "false",
            "description": "Select 드롭다운의 열림/닫힘 상태를 제어합니다."
        },
        {
            "prop": "defaultOpen",
            "type": ["boolean"],
            "default": "false",
            "description": "Select 드롭다운의 초기 열림 상태를 설정합니다."
        },
        {
            "prop": "onOpenChange",
            "type": ["(open: boolean, event?: Event) => void"],
            "default": "null",
            "description": "드롭다운 열림 상태가 변경될 때 호출되는 콜백 함수입니다."
        }
    ],
    "triggerProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "button",
            "description": "트리거 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "트리거 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "nativeButton",
            "type": ["boolean"],
            "default": "true",
            "description": "네이티브 button 요소의 동작을 사용할지 여부를 설정합니다."
        }
    ],
    "valueProps": [
        {
            "prop": "children",
            "type": ["React.ReactNode", "(value: unknown) => React.ReactNode"],
            "default": "null",
            "description": "선택된 값을 표시하는 children입니다. 함수형 children을 사용하면 선택된 값을 받아 커스텀 표시를 구현할 수 있습니다."
        },
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "span",
            "description": "값 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "값 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "placeholderProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "span",
            "description": "플레이스홀더 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "플레이스홀더 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "triggerIconProps": [
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "ChevronDownOutlineIcon",
            "description": "트리거 아이콘으로 표시할 요소입니다. 기본값은 ChevronDownOutlineIcon입니다."
        },
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "트리거 아이콘 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "트리거 아이콘 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "portalProps": [
        {
            "prop": "container",
            "type": ["HTMLElement", "() => HTMLElement"],
            "default": "document.body",
            "description": "포털이 렌더링될 컨테이너 요소입니다."
        }
    ],
    "positionerProps": [
        {
            "prop": "side",
            "type": ["'top'", "'right'", "'bottom'", "'left'"],
            "default": "'bottom'",
            "description": "드롭다운이 나타날 위치를 설정합니다."
        },
        {
            "prop": "align",
            "type": ["'start'", "'center'", "'end'"],
            "default": "'start'",
            "description": "드롭다운의 정렬 방향을 설정합니다."
        },
        {
            "prop": "sideOffset",
            "type": ["number"],
            "default": "4",
            "description": "트리거와 드롭다운 사이의 거리를 픽셀 단위로 설정합니다."
        },
        {
            "prop": "alignOffset",
            "type": ["number"],
            "default": "0",
            "description": "정렬 축에서의 오프셋을 픽셀 단위로 설정합니다."
        },
        {
            "prop": "alignItemWithTrigger",
            "type": ["boolean"],
            "default": "false",
            "description": "선택된 아이템을 트리거와 정렬할지 여부를 설정합니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "포지셔너 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "popupProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "팝업 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "팝업 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "contentProps": [
        {
            "prop": "portalProps",
            "type": ["SelectPortalProps"],
            "default": "null",
            "description": "Portal 컴포넌트에 전달할 props입니다."
        },
        {
            "prop": "positionerProps",
            "type": ["SelectPositionerProps"],
            "default": "null",
            "description": "Positioner 컴포넌트에 전달할 props입니다."
        },
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "콘텐츠 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "콘텐츠 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "itemProps": [
        {
            "prop": "value",
            "type": ["unknown"],
            "default": "null",
            "description": "아이템의 값입니다."
        },
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "아이템 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "아이템 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "아이템 내부에 렌더링할 콘텐츠입니다."
        }
    ],
    "itemIndicatorProps": [
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "ConfirmOutlineIcon",
            "description": "선택된 아이템에 표시할 인디케이터 아이콘입니다. 기본값은 ConfirmOutlineIcon입니다."
        },
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "span",
            "description": "인디케이터 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "인디케이터 요소에 적용할 CSS 클래스명입니다."
        }
    ],
    "groupProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "그룹 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "그룹 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "그룹 내부에 렌더링할 콘텐츠입니다."
        }
    ],
    "groupLabelProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "그룹 라벨 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "그룹 라벨 요소에 적용할 CSS 클래스명입니다."
        },
        {
            "prop": "children",
            "type": ["React.ReactNode"],
            "default": "null",
            "description": "그룹 라벨에 표시할 텍스트 또는 요소입니다."
        }
    ],
    "separatorProps": [
        {
            "prop": "render",
            "type": ["React.ReactElement"],
            "default": "div",
            "description": "구분선 요소를 렌더링할 때 사용할 커스텀 렌더링 prop입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "null",
            "description": "구분선 요소에 적용할 CSS 클래스명입니다."
        }
    ]
}
