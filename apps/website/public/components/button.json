{
    "props": [
        {
            "prop": "color",
            "type": "'primary' | 'secondary' | 'success' | 'warning' | 'danger' | 'contrast'",
            "default": "'primary'",
            "description": "버튼의 주 색상(의미)을 설정합니다."
        },
        {
            "prop": "size",
            "type": "'sm' | 'md' | 'lg' | 'xl'",
            "default": "'md'",
            "description": "버튼의 크기를 설정합니다."
        },
        {
            "prop": "variant",
            "type": "'fill' | 'outline' | 'ghost'",
            "default": "'fill'",
            "description": "버튼의 스타일 변형을 선택합니다."
        },
        {
            "prop": "stretch",
            "type": "boolean",
            "default": "false",
            "description": "true일 경우 버튼이 컨테이너의 전체 너비를 차지합니다."
        }
    ],
    "accessibility": [
        {
            "headingDescription": "Button WAI-ARIA 표준에 기반한 웹 접근성(A11y)을 준수합니다.\nVapor Button은 Radix 기능을 기반으로 구축되어 일부 웹 접근성은 Radix에서 제공하고 있습니다.",
            "sections": [
                {
                    "title": "개발 시 준수해야 할 내용을 명시합니다.",
                    "headerList": {
                        "props": "Props",
                        "description": "Description"
                    },
                    "items": [
                        {
                            "itemKey": "children",
                            "descriptions": [
                                "Button 내부에는 Phrasing Content만 사용할 수 있습니다."
                            ],
                            "exampleCode": "",
                            "badgeColor": "primary"
                        },
                        {
                            "itemKey": "aria-pressed",
                            "descriptions": [
                                "토글 버튼으로 이용되면, aria-pressed={true | false | mixed}를 가져야 합니다."
                            ],
                            "exampleCode": "import { Button } from \"@goorm-dev/vapor-core\";\nimport { useState } from \"react\";\n\nconst MuteButton = () => {\n  const [isMuted, setIsMuted] = useState(false);\n  const handleClick = () => {\n    setIsMuted((prev) => !prev);\n  };\n  return (\n    <Button aria-pressed={isMuted} onClick={handleClick}>\n      {isMuted ? \"Unmute\" : \"Mute\"}\n    </Button>\n  );\n};",
                            "badgeColor": "primary"
                        }
                    ]
                },
                {
                    "title": "컴포넌트 내부적으로 준수되고 있는 접근성 기능을 명시합니다.",
                    "headerList": {
                        "accessibility": "Accessibility",
                        "description": "Description"
                    },
                    "items": [
                        {
                            "itemKey": "role=”button”",
                            "descriptions": [
                                "버튼 요소에는 암시적으로 role=”button”이 적용됩니다."
                            ],
                            "exampleCode": "",
                            "badgeColor": "primary"
                        },
                        {
                            "itemKey": "role=”presentation”",
                            "descriptions": [
                                "버튼의 하위 요소에는 암시적으로 role=”presentation”이 적용됩니다."
                            ],
                            "exampleCode": "",
                            "badgeColor": "primary"
                        }
                    ]
                },
                {
                    "title": "Keyboard Interactions",
                    "headerList": {
                        "interaction": "Interaction",
                        "description": "Description"
                    },
                    "items": [
                        {
                            "itemKey": "Space",
                            "descriptions": [
                                "버튼에 포커스가 있을 때 space 키를 누르면 버튼이 클릭됩니다."
                            ],
                            "badgeColor": "hint"
                        },
                        {
                            "itemKey": "Enter",
                            "descriptions": [
                                "버튼에 포커스가 있을 때 enter 키를 누르면 버튼이 클릭됩니다."
                            ],
                            "badgeColor": "hint"
                        }
                    ]
                }
            ]
        }
    ]
}
