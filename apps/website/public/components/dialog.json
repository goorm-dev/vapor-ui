{
    "props": [
        {
            "prop": "open",
            "type": ["boolean"],
            "default": "-",
            "description": "다이얼로그의 제어된 열림 상태입니다. onOpenChange와 함께 사용해야 합니다."
        },
        {
            "prop": "defaultOpen",
            "type": ["boolean"],
            "default": "-",
            "description": "다이얼로그가 처음 렌더링될 때의 열림 상태입니다. 열림 상태를 제어할 필요가 없을 때 사용합니다."
        },
        {
            "prop": "onOpenChange",
            "type": ["function"],
            "default": "-",
            "description": "다이얼로그의 열림 상태가 변경될 때 호출되는 이벤트 핸들러입니다."
        },
        {
            "prop": "modal",
            "type": ["boolean"],
            "default": "true",
            "description": "다이얼로그의 모달 상태입니다. true로 설정하면 외부 요소와의 상호작용이 비활성화되고 다이얼로그 콘텐츠만 스크린 리더에 표시됩니다."
        },
        {
            "prop": "size",
            "type": ["md", "lg", "xl"],
            "default": "md",
            "description": "다이얼로그 Content의 가로 폭을 제어합니다. Root에 설정하면 모든 Content에 기본값으로 전달됩니다."
        },
        {
            "prop": "closeOnClickOverlay",
            "type": ["boolean"],
            "default": "true",
            "description": "Overlay(배경)를 클릭했을 때 다이얼로그가 닫히도록 할지 여부를 결정합니다. false로 설정하면 배경 클릭 시에도 닫히지 않습니다."
        },
        {
            "prop": "closeOnEscape",
            "type": ["boolean"],
            "default": "true",
            "description": "Escape 키 입력 시 다이얼로그를 닫을지 여부입니다. false로 설정하면 ESC 키를 눌러도 닫히지 않습니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그의 자식 컴포넌트들입니다."
        }
    ],
    "portalProps": [
        {
            "prop": "forceMount",
            "type": ["boolean"],
            "default": "-",
            "description": "더 정밀한 제어가 필요할 때 강제로 마운트하는 데 사용됩니다. React 애니메이션 라이브러리로 애니메이션을 제어할 때 유용합니다."
        },
        {
            "prop": "container",
            "type": ["HTMLElement"],
            "default": "document.body",
            "description": "포털할 컨테이너 요소를 지정합니다."
        }
    ],
    "overlayProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "forceMount",
            "type": ["boolean"],
            "default": "-",
            "description": "더 정밀한 제어가 필요할 때 강제로 마운트하는 데 사용됩니다. Dialog.Portal에서 상속받습니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "오버레이 요소에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "contentProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "forceMount",
            "type": ["boolean"],
            "default": "-",
            "description": "더 정밀한 제어가 필요할 때 강제로 마운트하는 데 사용됩니다. Dialog.Portal에서 상속받습니다."
        },
        {
            "prop": "onOpenAutoFocus",
            "type": ["function"],
            "default": "-",
            "description": "열린 후 컴포넌트로 포커스가 이동할 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onCloseAutoFocus",
            "type": ["function"],
            "default": "-",
            "description": "닫힌 후 트리거로 포커스가 이동할 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onEscapeKeyDown",
            "type": ["function"],
            "default": "-",
            "description": "escape 키를 눌렀을 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onPointerDownOutside",
            "type": ["function"],
            "default": "-",
            "description": "컴포넌트 경계 외부에서 포인터 이벤트가 발생할 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onInteractOutside",
            "type": ["function"],
            "default": "-",
            "description": "컴포넌트 경계 외부에서 상호작용(포인터 또는 포커스 이벤트)이 발생할 때 호출되는 이벤트 핸들러입니다."
        }
    ],
    "combinedContentProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "forceMount",
            "type": ["boolean"],
            "default": "-",
            "description": "더 정밀한 제어가 필요할 때 강제로 마운트하는 데 사용됩니다. Dialog.Portal에서 상속받습니다."
        },
        {
            "prop": "onOpenAutoFocus",
            "type": ["function"],
            "default": "-",
            "description": "열린 후 컴포넌트로 포커스가 이동할 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onCloseAutoFocus",
            "type": ["function"],
            "default": "-",
            "description": "닫힌 후 트리거로 포커스가 이동할 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onEscapeKeyDown",
            "type": ["function"],
            "default": "-",
            "description": "escape 키를 눌렀을 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onPointerDownOutside",
            "type": ["function"],
            "default": "-",
            "description": "컴포넌트 경계 외부에서 포인터 이벤트가 발생할 때 호출되는 이벤트 핸들러입니다. event.preventDefault를 호출하여 방지할 수 있습니다."
        },
        {
            "prop": "onInteractOutside",
            "type": ["function"],
            "default": "-",
            "description": "컴포넌트 경계 외부에서 상호작용(포인터 또는 포커스 이벤트)이 발생할 때 호출되는 이벤트 핸들러입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "CombinedContent 요소에 적용할 추가 CSS 클래스입니다."
        },
        {
            "prop": "style",
            "type": ["React.CSSProperties"],
            "default": "-",
            "description": "CombinedContent 요소에 적용할 인라인 스타일입니다."
        }
    ],
    "triggerProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "disabled",
            "type": ["boolean"],
            "default": "-",
            "description": "트리거 버튼을 비활성화할지 여부입니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그를 여는 트리거 요소의 내용입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "트리거 버튼에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "closeProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그를 닫는 버튼의 내용입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "닫기 버튼에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "titleProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그 제목의 내용입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "제목 요소에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "descriptionProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그 설명의 내용입니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "설명 요소에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "headerProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그 헤더의 내용입니다. 일반적으로 Title과 Close 버튼을 포함합니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "헤더 요소에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "bodyProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그 바디의 내용입니다. 주요 콘텐츠와 Description을 포함합니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "바디 요소에 적용할 추가 CSS 클래스입니다."
        }
    ],
    "footerProps": [
        {
            "prop": "asChild",
            "type": ["boolean"],
            "default": "false",
            "description": "자식 요소와 속성 및 동작을 병합하여 기본 렌더링 요소를 변경합니다."
        },
        {
            "prop": "children",
            "type": ["ReactNode"],
            "default": "-",
            "description": "다이얼로그 푸터의 내용입니다. 일반적으로 액션 버튼들을 포함합니다."
        },
        {
            "prop": "className",
            "type": ["string"],
            "default": "-",
            "description": "푸터 요소에 적용할 추가 CSS 클래스입니다."
        }
    ]
}
